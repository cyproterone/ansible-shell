#!/usr/bin/env python3

from argparse import ArgumentParser, Namespace
from enum import Enum, auto
from http.client import HTTPResponse
from typing import cast
from urllib.request import Request, build_opener


class Format(Enum):
    line = auto()
    table = auto()
    graph = auto()


def wttrin_uri(display: Format) -> str:
    if display == Format.line:
        return "https://wttr.in?m&format=4"
    elif display == Format.table:
        return "https://wttr.in?mT"
    elif display == Format.graph:
        return "https://v2.wttr.in?mT"
    else:
        raise ValueError()


def wttrin(display: Format) -> str:
    uri = wttrin_uri(display)
    headers = {"User-Agent": "curl", "Accept-Language": "zh"}
    req = Request(uri, headers=headers)

    opener = build_opener()
    with opener.open(req) as resp:
        return cast(HTTPResponse, resp).read().decode()


def parse_args() -> Namespace:
    parser = ArgumentParser()
    parser.add_argument(
        "format",
        nargs="?",
        type=Format,
        choices=tuple(f for f in Format),
        default=Format.table,
    )
    return parser.parse_args()


def main() -> None:
    args = parse_args()
    resp = wttrin(args.format)
    print(resp)


main()
