#!/usr/bin/env bash

set -eu
set -o pipefail

OPTS='s'
LONG_OPTS='silent'

PARSED="$(getopt --options="$OPTS", --longoptions="$LONG_OPTS" --name="$0" -- "$@")"
eval set -- "$PARSED"

SILENT=0

while true
do
  case "$1" in
    -s|--silent)
      SILENT=1
      shift
      ;;
    --)
      shift
      break
      ;;
    *)
      >&2 echo '!ERR!'
      exit 2
      ;;
  esac
done
ARG_NUM=$#


print_err() {
  echo -n "$PATH"
  >&2 echo 'paths {show, add, rm|remove} path'
  >&2 echo "$1"
  exit 1
}


check_arg() {
  if [[ $ARG_NUM -ne 2 ]]
  then
    print_err 'ERR! -- # of arguments'
  fi
}

show() {
  echo -n "$PATH"
  echo "$PATH" | tr ':' '\n' | awk '!seen[$0]++' >&2
}

remove() {
  local target="$1"
  local silent="$2"

  local acc=''
  while read -r -d ':' path
  do
    local sep=':'
    if [[ -z "$acc" ]]
    then
      sep=''
    fi

    if [[ "$path" != "$target" ]]
    then
      acc="${acc}${sep}${path}"
    fi
  done <<< "$PATH"
  echo -n "$acc"

  if [[ "$silent" -eq 0 ]]
  then
    >&2 echo "REMOVED -- $target"
  fi
}

add() {
  local target="$1"
  local silent="$2"

  if [[ -d "$target" ]]
  then
    echo -n "$target:$(remove "$target" 1)"
    if [[ "$silent" -eq 0 ]]
    then
      >&2 echo "ADDED   -- $target"
    fi
  else
    print_err "ERR! -- Not a Directory: $target"
  fi
}


ACTION="$1"
case "$ACTION" in
  show)
    show
    ;;
  add)
    check_arg
    add "$2" "$SILENT"
    ;;
  rm|remove)
    check_arg
    remove "$2" "$SILENT"
    ;;
  *)
    print_err 'ERR!'
    exit 2
    ;;
esac

