#!/usr/bin/env bash

set -eu
set -o pipefail

OPTS='s'
LONG_OPTS='silent'

PARSED="$(getopt --options="$OPTS", --longoptions="$LONG_OPTS" --name="$0" -- "$@")"
eval set -- "$PARSED"

SILENT=0

while true
do
  case "$1" in
    -s|--silent)
      SILENT=1
      shift
      ;;
    --)
      shift
      break
      ;;
    *)
      >&2 echo '!ERR!'
      exit 2
      ;;
  esac
done
ARG_NUM=$#


print_err() {
  >&2 echo "$1"
  >&2 echo 'paths {show, add, remove} path'
}


check_arg() {
  if [[ $ARG_NUM -ne 2 ]]
  then
    print_err 'ERR! -- # of arguments'
    exit 1
  fi
}

show() {
  echo "$PATH"
  echo "$PATH" | tr ':' '\n' | awk '!seen[$0]++' >&2
}

remove() {
  local target="$1"
  local silent="$2"
  local expr="$(printf '$0!="%s" {print $0}' "$target")"
  echo "$PATH" | tr ':' '\4' | awk -F '\4' "$expr" | tr '\4' ':'
  if [[ "$silent" -eq 0 ]]
  then
    >&2 echo "REMOVED -- $target"
  fi
}

add() {
  local target="$1"
  local silent="$2"
  echo "$target:$(remove "$target" 1)"
  if [[ "$silent" -eq 0 ]]
  then
    >&2 echo "ADDED   -- $target"
  fi
}


ACTION="$1"
case "$ACTION" in
  show)
    show
    ;;
  add)
    check_arg
    add "$2" "$SILENT"
    ;;
  remove)
    check_arg
    remove "$2" "$SILENT"
    ;;
  *)
    print_err 'ERR!'
    exit 2
    ;;
esac

